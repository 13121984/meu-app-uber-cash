// DO NOT EDIT THIS FILE! IT IS GENERATED EACH TIME "capacitor update" IS RUN
/*
  This file is used to load the Capacitor build environment properties on Android.
  Or, if you are using a monorepo, you can redirect this file to a shared properties file.
*/

def nodeProjectRoot = "../../"

def coreProperties = new Properties()
def corePropertiesFile = new File(project.projectDir, "${nodeProjectRoot}node_modules/@capacitor/android/capacitor.properties")
if (corePropertiesFile.exists()) {
    corePropertiesFile.withReader('UTF-8') { reader ->
        coreProperties.load(reader)
    }
}

def-props.load(reader)
    }
}

ext.ANDROID_WEB_DIR = coreProperties.getProperty('android.web.dir', 'app/src/main/assets/public')
ext.CAPACITOR_HTTPS_ENABLED = coreProperties.getProperty('capacitor.https.enabled', 'false')
ext.CAPACITOR_BUILD_TYPE = coreProperties.getProperty('capacitor.build.type', 'PROD')
ext.CAPACITOR_SERVER_URL = coreProperties.getProperty('capacitor.server.url', '')
ext.CAPACITOR_BACKGROUND_COLOR = coreProperties.getProperty('capacitor.android.background.color', '#ffffff')
ext.CAPACITOR_ANDROID_STUDIO_PATH = coreProperties.getProperty('capacitor.android.studio.path', '')

// Corrected logic to find the project root robustly
def getProjectRoot() {
    // Start from the current directory (android/app) and go up until we find package.json
    def currentDir = project.projectDir
    while (currentDir != null && !new File(currentDir, 'package.json').exists()) {
        currentDir = currentDir.parentFile
    }
    if (currentDir == null) {
        throw new GradleException("Could not find package.json in any parent directory.")
    }
    return currentDir
}

ext.CAPACITOR_PROJECT_ROOT = getProjectRoot()
ext.CAPACITOR_NODE_MODULES_PATH = new File(project.projectDir, "${nodeProjectRoot}node_modules")
ext.CAPACITOR_CLI_PATH = new File(ext.CAPACITOR_NODE_MODULES_PATH, "capacitor-cli/bin/capacitor")
ext.CAPACITOR_CORE_PATH = new File(ext.CAPACITOR_NODE_MODULES_PATH, "@capacitor/core")
ext.CAPACITOR_PUBLIC_PATH = new File(project.projectDir, ext.ANDROID_WEB_DIR)

if (ext.CAPACITOR_BUILD_TYPE == "DEBUG") {
    // We are in debug mode, find the server URL
    def serverUrl = ext.CAPACITOR_SERVER_URL
    if (serverUrl == "") {
        // Get the server URL from capacitor.config.json
        def configFile = new File(ext.CAPACITOR_PROJECT_ROOT, "capacitor.config.json")
        if (configFile.exists()) {
            def configJson = new groovy.json.JsonSlurper().parse(configFile)
            if (configJson.server && configJson.server.url) {
                serverUrl = configJson.server.url
            }
        }
    }

    if (serverUrl != "") {
        ext.CAPACITOR_SERVER_URL = serverUrl
    }
}
